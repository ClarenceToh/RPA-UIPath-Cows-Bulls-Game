<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="390,831" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <StateMachine InitialState="{x:Reference __ReferenceID3}" DisplayName="State Machine" sap:VirtualizedContainerService.HintSize="651,636" sap2010:WorkflowViewState.IdRef="StateMachine_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <x:Double x:Key="StateContainerWidth">617.4</x:Double>
          <x:Double x:Key="StateContainerHeight">600</x:Double>
          <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 303.3,107.5 303.3,127.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State x:Name="__ReferenceID3" DisplayName="Generate Random Number" sap:VirtualizedContainerService.HintSize="464,2020" sap2010:WorkflowViewState.IdRef="State_1">
        <State.Entry>
          <Sequence sap:VirtualizedContainerService.HintSize="418,1188" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Comment sap:VirtualizedContainerService.HintSize="376,265" sap2010:WorkflowViewState.IdRef="Comment_1" Text="This section explains why I chose to use state machines and how I generate random numbers. &#xA;&#xA;I used state machine because it is a type of automation that uses a finite number of states in its execution. It can go into a state when it is triggered by an activity, and it exits that state when another activity is triggered. Also, I can add conditions based on which to jump from one state to another. This is comparable to python.&#xA;" />
            <Sequence sap:VirtualizedContainerService.HintSize="376,791" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="334,399" sap2010:WorkflowViewState.IdRef="Comment_2" Text="To Explain Random number generation&#xA;&#xA;First, a number between 0 and 9999 is produced and converted to a string. This is attached to the variable, RandomNumber2.&#xA;&#xA;Next, &quot;000&quot; is added to the front of RandomNumber2 and is named RandomNumber1. &#xA;&#xA;Last, the last four characters of RandomNumber1 is extracted and is named RandomNumber. &#xA;&#xA;The rationale is to ensure that numbers of length that is below 4 will have zeros in front of them. Strings help in this manipulation in the later stages as character matching is required.&#xA;" />
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RandomNumber2]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[New Random().Next(0000,9999).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RandomNumber1]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["000"+RandomNumber2]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RandomNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[RandomNumber1.Substring(RandomNumber1.Length-4)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
        </State.Entry>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">243,127.5</av:Point>
            <av:Size x:Key="ShapeSize">134,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <State.Exit>
          <Sequence sap:VirtualizedContainerService.HintSize="376,582" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Comment sap:VirtualizedContainerService.HintSize="334,94" sap2010:WorkflowViewState.IdRef="Comment_3" Text="Instructions&#xA;&#xA;Added examples for clarity" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Hello, this is Mastermind, a game where you make a guess of any 4 digit number ranging from 0000 to 9999. If you guessed the correct number in ten tries, you win the game. However, fret not! Within the first ten tries, I will provide you with clues to help you get closer to the answer! &quot;]" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_28" Text="[&quot;For each wrong guess, I will tell you the number of correct digits that are In the same position as the answer, denoted by P. I will also tell you the number of correct digits that are in the wrong position as the answer, denoted by N.&quot;]" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_22" Text="[&quot;For example, If your second guess was 7777 and the answer is 9797, I will display [Your guess was 7777. Result: 0N, 2P Tries Left: 8]&quot;]" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_23" Text="[&quot;For example, If your second guess was 7979 and the answer is 9797, I will display [Your guess is 7979. Result: 4N, 0P Tries Left: 8]&quot;]" />
          </Sequence>
        </State.Exit>
        <State.Transitions>
          <Transition DisplayName="T1" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">310,188.5 310,218.5 293.3,218.5 293.3,289.5</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <State x:Name="__ReferenceID0" DisplayName="Guess Number" sap:VirtualizedContainerService.HintSize="134,61" sap2010:WorkflowViewState.IdRef="State_3">
                <State.Entry>
                  <Sequence sap:VirtualizedContainerService.HintSize="989,5617" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Comment sap:VirtualizedContainerService.HintSize="947,93" sap2010:WorkflowViewState.IdRef="Comment_4" Text="The input dialog retrieves guess input from user and is converted to string as listed in the variable section." />
                    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="947,92" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Guess any 4 digit number between 0000 and 9999." Title="Enter the number">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[GuessNumber]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                    <ui:Comment sap:VirtualizedContainerService.HintSize="947,189" sap2010:WorkflowViewState.IdRef="Comment_5" Text="Check that the string includes only integers and the length of string input is 4. If it is not exactly 4 or consists of not only integers, tell user via message that the user should try again.&#xA;&#xA;If the format is correct, proceed with sequence." />
                    <If Condition="[GuessNumber.Length = 4 AndAlso GuessNumber.All(Function(x) char.IsDigit(x))]" sap:VirtualizedContainerService.HintSize="947,5031" sap2010:WorkflowViewState.IdRef="If_31">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="526,4883" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,93" sap2010:WorkflowViewState.IdRef="Comment_6" Text="After the guess is made, the guess (string) has to be checked against the random number (string) to provide feedback to the user. " />
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="Comment_7" Text="Prior to starting the entire checking process, create integer variables, tries, n and p to track the number of tries the user has made, the number of correct digits that are in the wrong position and the number of correct digits that are in the right position respectively. &#xA;&#xA;Initiate the variable tries to 10 as the user has 10 tries and, n and p to 0." />
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,74" sap2010:WorkflowViewState.IdRef="Comment_8" Text="For every time the user guesses, minus 1 from tries." />
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[tries]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[tries - 1]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[p]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[n]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,131" sap2010:WorkflowViewState.IdRef="Comment_9" Text="nodouble is a list that receives string characters from the guess that is in the correct position as the random number. This list helps to prevent duplicates during the checking process." />
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:List(x:String)">[nodouble]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,227" sap2010:WorkflowViewState.IdRef="Comment_10" Text="Here, multiple IF statements are made. &#xA;&#xA;First, we check P, which is to check if the digits in the user's guess matches the random number by index. &#xA;&#xA;Since, there are 4 digits to check, we perform 4 iterations of this action. Mainly, if there is a match, add 1 to p variable and add the character to the list, nodouble." />
                          <If Condition="[RandomNumber.Chars(0) = GuessNumber.Chars(0)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_9">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[p]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[p + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" Collection="[nodouble]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[GuessNumber.Chars(0).ToString]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <If Condition="[RandomNumber.Chars(1) = GuessNumber.Chars(1)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_15">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[p]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[p + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" Collection="[nodouble]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[GuessNumber.Chars(1).ToString]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <If Condition="[RandomNumber.Chars(2) = GuessNumber.Chars(2)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_14">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[p]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[p + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" Collection="[nodouble]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[GuessNumber.Chars(2).ToString]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <If Condition="[RandomNumber.Chars(3) = GuessNumber.Chars(3)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_13">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[p]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[p + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" Collection="[nodouble]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[GuessNumber.Chars(3).ToString]" />
                              </Sequence>
                            </If.Then>
                          </If>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,438" sap2010:WorkflowViewState.IdRef="Comment_11" Text="After checking P and filling the list, nodouble, with the matching characters, check for N.&#xA;&#xA;N is the number of correct digits that are in the wrong position.&#xA;&#xA;To check for N, there are three conditions. &#xA;&#xA;First, the character in the guess number must not match the character in the random number. &#xA;&#xA;Second, the specific character in the random number must be in the guess number.&#xA;&#xA;Last, to prevent duplicates, the character identified in step two must not be in the list, nodouble.&#xA;&#xA;If the three conditions are satisfied, add 1 to n." />
                          <If Condition="[GuessNumber.Chars(0) &lt;&gt; RandomNumber.Chars(0) AndAlso GuessNumber.Contains(RandomNumber.Chars(0)) AndAlso Not nodouble.Contains(RandomNumber.Chars(0))]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_24">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[n]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[n+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <If Condition="[GuessNumber.Chars(1) &lt;&gt; RandomNumber.Chars(1) AndAlso GuessNumber.Contains(RandomNumber.Chars(1)) AndAlso Not nodouble.Contains(RandomNumber.Chars(1))]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_25">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[n]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[n+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <If Condition="[GuessNumber.Chars(2) &lt;&gt; RandomNumber.Chars(2) AndAlso GuessNumber.Contains(RandomNumber.Chars(2)) AndAlso Not nodouble.Contains(RandomNumber.Chars(2))]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_26">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[n]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[n+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <If Condition="[GuessNumber.Chars(3) &lt;&gt; RandomNumber.Chars(3) AndAlso GuessNumber.Contains(RandomNumber.Chars(3)) AndAlso Not nodouble.Contains(RandomNumber.Chars(3))]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_27">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[n]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[n+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="Comment_12" Text="If the guess matches the random number, i.e. 4P, proceed to the final stage. &#xA;&#xA;Else, inform the user via message about the performance of the guess and try again." />
                          <If Condition="[GuessNumber = RandomNumber]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_35">
                            <If.Else>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_25" Text="[&quot;Your guess was &quot;+GuessNumber+&quot;. Result: &quot;+ n.ToString+&quot;N, &quot;+p.ToString+&quot;P  Tries left: &quot; +tries.ToString]" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_17" Text="Message that tells the user to input in the correct format." />
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_24" Text="[&quot;Your guess is not in the correct format. It has to be 4 digits. (eg. 0203)&quot;]" />
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_26" Text="[&quot;Please try again. Thank you!&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">233,289.5</av:Point>
                    <av:Size x:Key="ShapeSize">134,61</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <State.Transitions>
                  <Transition DisplayName="Correct guess" sap:VirtualizedContainerService.HintSize="450,519" sap2010:WorkflowViewState.IdRef="Transition_3">
                    <Transition.Trigger>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_15" Text="If guess matches the random number, proceed to Win state." />
                    </Transition.Trigger>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">367,320 397,320 397,410 433,410</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="GuessNumber=RandomNumber" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID1" DisplayName="Win" sap:VirtualizedContainerService.HintSize="134,61" sap2010:WorkflowViewState.IdRef="State_2" IsFinal="True">
                        <State.Entry>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;You’ve won! The number was &quot;+RandomNumber +&quot;.&quot;]" />
                          </Sequence>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">433,379.5</av:Point>
                            <av:Size x:Key="ShapeSize">134,61</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition DisplayName="No tries left" sap:VirtualizedContainerService.HintSize="450,519" sap2010:WorkflowViewState.IdRef="Transition_2">
                    <Transition.Trigger>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_16" Text="Zero tries indicate a loss, proceed to Lose state." />
                    </Transition.Trigger>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">233,323.05 103.4,323.05 103.4,459.5</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="tries=0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID2" DisplayName="Lose" sap:VirtualizedContainerService.HintSize="134,61" sap2010:WorkflowViewState.IdRef="State_4" IsFinal="True">
                        <State.Entry>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[&quot;Game Over! The number was &quot;+ RandomNumber +&quot;.&quot;]" />
                          </Sequence>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">23,459.5</av:Point>
                            <av:Size x:Key="ShapeSize">134,61</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition DisplayName="Try again" sap:VirtualizedContainerService.HintSize="450,557" sap2010:WorkflowViewState.IdRef="Transition_1">
                    <Transition.Trigger>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_14" Text="The output p of the Guess Number state will indicate if the user made a correct guess, which is p = 4. If p is less than 4 and user has tries left, proceed to Guess Number state. " />
                    </Transition.Trigger>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">333.5,350.5 333.5,380.5 259.8,380.5 259.8,350.5</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">15</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Action>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </Transition.Action>
                    <Transition.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="p&lt;4 AndAlso tries &gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                    </Transition.Condition>
                  </Transition>
                </State.Transitions>
                <State.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="n" />
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="p" />
                  <Variable x:TypeArguments="scg:List(x:String)" Name="nodouble" />
                </State.Variables>
              </State>
            </Transition.To>
          </Transition>
        </State.Transitions>
      </State>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="RandomNumber2" />
        <Variable x:TypeArguments="x:String" Name="GuessNumber" />
        <Variable x:TypeArguments="x:String" Name="RandomNumber1" />
        <Variable x:TypeArguments="x:String" Name="RandomNumber" />
        <Variable x:TypeArguments="x:Int32" Default="10" Name="tries" />
      </StateMachine.Variables>
    </StateMachine>
  </Sequence>
</Activity>